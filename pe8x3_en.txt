//Design Code
module pe8x3(output reg [2:0]out,output reg valid,input [7:0]in,input en);
  always@*
    begin
      if(en==1'b0)
        begin
          out=3'b000;
          valid=1'b0;
        end
      else
        begin
          if(in[7]==1'b1)
            begin
              out=3'b111;
              valid=1'b1;
            end
          else if(in[6]==1'b1)
            begin
              out=3'b110;
              valid=1'b1;
            end
          else if(in[5]==1'b1)
            begin
              out=3'b101;
              valid=1'b1;
            end
          else if(in[4]==1'b1)
            begin
              out=3'b100;
              valid=1'b1;
            end
          else if(in[3]==1'b1)
            begin
              out=3'b011;
              valid=1'b1;
            end
          else if(in[2]==1'b1)
            begin
              out=3'b010;
              valid=1'b1;
            end
          else if(in[1]==1'b1)
            begin
              out=3'b001;
              valid=1'b1;
            end
          else if(in[0]==1'b1)
            begin
              out=3'b000;
              valid=1'b1;
            end
          else
            begin
              out=3'b00;
              valid=1'b0;
            end
        end
    end
endmodule

//Test Bench Code
module test();
  wire [2:0]out;
  wire valid;
  reg[7:0]in;
  reg en;
  integer i;
  pe8x3 dut(out,valid,in,en);
  initial
    begin
      for(i=0;i<2;i=i+1)
        begin
          en=i;
          begin
            integer j;
            for(j=0;j<256;j=j+1)
              begin
                in=j;
                #10;
              end
          end
          #10;
        end
    end
  initial
    begin
      $monitor("en=%b,in=%b,out=%b,valid=%b",en,in,out,valid);
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
endmodule

